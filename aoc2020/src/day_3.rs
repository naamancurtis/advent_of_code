#![allow(dead_code)]

#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd)]
pub enum Square {
    Clear,
    Tree,
}

impl From<char> for Square {
    fn from(c: char) -> Self {
        match c {
            '.' => Square::Clear,
            '#' => Square::Tree,
            _ => panic!(),
        }
    }
}

pub trait Navigation {
    fn navigate(i: usize, j: usize, input: &[Vec<Square>]) -> (usize, usize);
}

pub fn parse_input(input: &[&str]) -> Vec<Vec<Square>> {
    input
        .iter()
        .map(|row| row.chars().map(Square::from).collect())
        .collect()
}

pub fn taboggan_trajectory<T: Navigation>(input: &[&str]) -> u32 {
    let mut counter = 0;
    let input = parse_input(input);
    let mut i = 0;
    let mut j = 0;
    loop {
        let result = T::navigate(i, j, &input);
        i = result.0;
        j = result.1;
        if i >= input.len() {
            break;
        }
        if input[i][j] == Square::Tree {
            counter += 1;
        }
    }
    counter
}

mod puzzle_1 {
    use super::{Navigation, Square};

    pub struct Puzzle1;

    impl Navigation for Puzzle1 {
        fn navigate(i: usize, j: usize, input: &[Vec<Square>]) -> (usize, usize) {
            let max_x = input[0].len();
            let i = i + 1;
            let j = (j + 3) % max_x;
            (i, j)
        }
    }
}

mod puzzle_2 {
    use super::*;
    use std::sync::{mpsc, Arc};
    use std::thread;

    fn navigate(
        i: usize,
        j: usize,
        right_jump: usize,
        down_jump: usize,
        max_x_len: usize,
    ) -> (usize, usize) {
        let i = i + down_jump;
        let j = (j + right_jump) % max_x_len;
        (i, j)
    }

    pub fn run_scenarios(input: &[&str]) -> u64 {
        let input = Arc::new(parse_input(input));

        // (down, right)
        let scenarios = vec![(1, 1), (1, 3), (1, 5), (1, 7), (2, 1)];

        let mut handles = Vec::with_capacity(scenarios.len());
        let (tx, rx) = mpsc::channel();

        for (down, right) in scenarios.into_iter() {
            let tx_clone = tx.clone();
            let input = Arc::clone(&input);

            handles.push(thread::spawn(move || {
                let mut counter = 0;
                let mut i = 0;
                let mut j = 0;
                loop {
                    let result = navigate(i, j, right, down, input[0].len());
                    i = result.0;
                    j = result.1;
                    if i >= input.len() {
                        break;
                    }
                    if input[i][j] == Square::Tree {
                        counter += 1;
                    }
                }
                tx_clone.send(counter).unwrap();
            }));
        }

        drop(tx);

        for handle in handles {
            handle.join().unwrap();
        }

        rx.into_iter().product()
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn puzzle_1_test() {
        let input = [
            "..##.........##.........##.........##.........##.........##.......",
            "#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..",
            ".#....#..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.",
            "..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#",
            ".#...##..#..#...##..#..#...##..#..#...##..#..#...##..#..#...##..#.",
            "..#.##.......#.##.......#.##.......#.##.......#.##.......#.##.....",
            ".#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#",
            ".#........#.#........#.#........#.#........#.#........#.#........#",
            "#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...",
            "#...##....##...##....##...##....##...##....##...##....##...##....#",
            ".#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#",
        ];
        assert_eq!(taboggan_trajectory::<puzzle_1::Puzzle1>(&input), 7);
    }

    #[test]
    fn puzzle_1_sol() {
        assert_eq!(taboggan_trajectory::<puzzle_1::Puzzle1>(&INPUT), 244);
    }

    #[test]
    fn day_3_puzzle_2_test() {
        let input = [
            "..##.........##.........##.........##.........##.........##.......",
            "#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..",
            ".#....#..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.",
            "..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#",
            ".#...##..#..#...##..#..#...##..#..#...##..#..#...##..#..#...##..#.",
            "..#.##.......#.##.......#.##.......#.##.......#.##.......#.##.....",
            ".#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#",
            ".#........#.#........#.#........#.#........#.#........#.#........#",
            "#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...",
            "#...##....##...##....##...##....##...##....##...##....##...##....#",
            ".#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#",
        ];
        assert_eq!(puzzle_2::run_scenarios(&input), 336);
    }

    #[test]
    fn day_3_puzzle_2_sol() {
        assert_eq!(puzzle_2::run_scenarios(&INPUT), 9406609920);
    }
}

const INPUT: [&str; 323] = [
    "....#...#####..##.#..##..#....#",
    "..##.#.#.........#.#......##...",
    "#.#.#.##.##...#.......#...#..#.",
    "..##.............#.#.##.....#..",
    "##......#.............#....#...",
    ".....##..#.....##.#.......##..#",
    ".##.....#........##...##.#....#",
    ".##......#.#......#.....#..##.#",
    "##....#..#...#...#...##.#...##.",
    "##........##.#...##......#.#.#.",
    "..#.#........#...##.....#.....#",
    "..#.......####.#....#..#####...",
    ".##..#..#..##.#.....###.#..#...",
    "......###..##.....#.#.#..###.#.",
    "..#.#...#..##.....#....#.#.....",
    ".....#.#...#.###.#..#..........",
    "##.....#...#.#....#..#.#.......",
    "..#...#...#.........##......#..",
    "......#.#...#...#..#...##.#...#",
    "....#.................##.##....",
    "...#......#.............#....##",
    "##..#..#..........#...##.#.#...",
    "....#...##....#..#.#...........",
    "##.#.#.#...#....#........#..#.#",
    "...###..........#...#...#..##.#",
    "..##.......###.#......##.##....",
    "...........#.#....#.....#.#...#",
    "..#......##.#...##.#.#......#.#",
    "..........#.#....#.#..#....#...",
    "##..##...##.......#.#....#.#.##",
    ".##..#.#..#...........#.#...#.#",
    "#......##......#....####.#....#",
    "..###......##...#...#.#.......#",
    ".#.##.##....##..#..##...#......",
    ".#....#..#........#..#.##.#.#..",
    "..#.........#.#.###....###.#...",
    "..#..#.#.#..#..#.##.##...####..",
    "#..#..#......#..#.#....#.#.#.##",
    "..#.........#...#..#.#.#..#...#",
    "#..#......###.....##....##.....",
    "#..#.....#.#.#.##.....##...#.#.",
    "##..#.#...#.........#.#........",
    "#....#.......#.....#..#..#.#...",
    "...###.##.###.###.#####..#...#.",
    ".....#..#.#..##...............#",
    "..#.....###.###.#.....#.#....##",
    "###.#.........#..#.#.#..#.#..#.",
    ".##.........#..#..##....#.#...#",
    ".#...#........#...#.....#....#.",
    "####..........###....#.#.#....#",
    "....##..###....#....#.#...#....",
    "..............##......##..#.###",
    ".#...........###.#.#....#......",
    "###.#..#..#...#.........##.....",
    "..#.....##...#.#.....##...#.##.",
    ".###.#........#..#.#...#.#..##.",
    ".......##....##.........##.#..#",
    "#....#...#...##...#.#..#..#..##",
    "...#...##..#...#...#.#....#.#.#",
    "#.#......#.#...##......#.#...##",
    ".#.###..#.###.#.....#.##.##.#.#",
    "#...#............#...#.##..##..",
    "....#..###.......#.....##....#.",
    ".#####..#.....#.....#...#.....#",
    "..##..#..###.......##.#........",
    ".#...##.##.....#.##...##...#..#",
    "......###...#....#....#........",
    "....#...#.#....#...#.#.#......#",
    "....#..##...##.#..#....###.....",
    "...#...#..#.#...#....#.#..#####",
    "####....#.....#.........#.#....",
    "...###.#.#..#.#..##............",
    ".##..#####..#...#..#..#.......#",
    ".###......#.#.#..#....#.....#..",
    "#....##.##..#.#...............#",
    "...#.#..#........#......#....#.",
    "#.....#....###....#..#.#.#.....",
    ".#..#....#...#.#.....##....#...",
    "..#.##.#.##.#..#.##.#.....#.#..",
    ".......#.......###..###..#...#.",
    ".#.......#..#........#.#.......",
    ".#.#...#.....#.##..##.....#....",
    "#.......##....#......#.....##..",
    ".#.....#...##...#..##.....#....",
    "....#..#.#.......#.#.#.........",
    "..#....#....##.##..#..##.##.#..",
    ".#...#....##...#........#....#.",
    "#.#......#...#....#...........#",
    ".#....#..#..###.#.....#..#.....",
    "..#..................#.....#...",
    "..#...###..#..####.#..#.#.#.#..",
    "...#........##...##..##..#....#",
    "...#.....#........##..#.....#.#",
    "#....#.....##.##......#...##...",
    "...#####....#..##..##...#.#....",
    "###.........#.#..#..#..##.#...#",
    "##...#..##...#.##.#........#...",
    ".#....#.#...#..#...#..#.#......",
    ".#......##.#...#...#..#....#...",
    "#..#.#.#......##.##.####..#....",
    ".#...#.#.##...##.#...#...#.....",
    "####.#.........#...##..##....##",
    ".....###........###.##...#.#...",
    ".##.....#.....#....##.....##...",
    ".#.#...#####....##...##.....#..",
    "....###..........#......##..#.#",
    "..#.....#....#..#...#.....##..#",
    "...##.##.#.######....#.#....##.",
    "...#.#.#...#..#....##.........#",
    ".#.#...##...#....#.#....##.....",
    "...#..#.....#.....#.##.....#...",
    ".#.#.#.....#.##.#....#.#....##.",
    "#...#......###...#..###...#....",
    "...##.#.#..#........##.......#.",
    ".####.####......#........#.....",
    "....#..#####....#......####....",
    "#...##.#..#..#####.#...#......#",
    "#.#....#..#.........###........",
    ".##.........#....#......#.#....",
    "...###.........####.#........##",
    "..#..#........#.#..##......#..#",
    ".##..#....#...##.####.#...#....",
    "......#.......#..#..#.#.##.#...",
    ".###....#.#...#.#.......##..#.#",
    "#...#....#............#####....",
    "...#.##......#####..#........#.",
    "..#...##.....#...#..#.#........",
    "...#.#...#...##...#..#....#....",
    "..#..##.....#....#.#.###.......",
    ".......##..#...#.............##",
    ".....#.....#..##.##.....#......",
    ".....##...#......#..##....#.###",
    ".#...#.#.#.#.##.....##..###..#.",
    "....##..........#.....###......",
    "....#...#.#.#..#.......#....#..",
    "..###...#...........##..###....",
    "...#.##.......#....#....#.#....",
    "##...#..##..#.##..........##..#",
    ".##.....#..#......##..####.#.##",
    "....##..#.#.###......#..#...#..",
    "####..#.#....#...#....###.#.#..",
    "###......#...##.##..#.##..#..#.",
    "..#.#..#.#.#.....#...#..#.####.",
    ".###.#...##...##....##......#.#",
    "..#............#.##..#....#..#.",
    "###.......#......###..#........",
    "....##......###.....#.#..###...",
    "..#...##...#......#..#.........",
    "#..####.#....#.....###....#.#..",
    ".#.#.#.......##....###.........",
    ".......#.##.#####....#.#...####",
    ".#...#....#....#.###..#.....#..",
    ".###.#.#.###.###.#..####.##.#..",
    "....#.........#.#.......##.....",
    "#..#..#.#...........#.#.##..#.#",
    ".#.....#..#...#.....#.##......#",
    "..###.#............#.....####..",
    "#.....##..##...#....####....#..",
    "...#.....#..................#..",
    "....#.###.#..#..#..##..#..##...",
    "...##.#........#......#...##...",
    "#................##....#...#...",
    "..##......##.#.##..#....#.....#",
    ".#..#.....#..........##.#.#....",
    ".....#...####....#..#......#...",
    "..#......###.#.#.#.#.......#..#",
    ".##......#.......#....###.#....",
    "#..#.#.#..#...#.#.##..##..#....",
    "....#...##..#.#......#.##...#..",
    "...###...#.##..#...#....#......",
    "##......#.#...#.#.#.........#..",
    "..#..........#...###.#.##....#.",
    "...##.....#.....#...###..#.....",
    "..####.#.....#.#.....#..#.#....",
    ".#.....##...##.##.#.....#.####.",
    ".......#.....#...##..........#.",
    ".#...#.#....#####....###.#..#.#",
    ".##.##....##...##.#.....#......",
    "#......#.##..#..##.#.#.......#.",
    ".#..#....###..#........##...#..",
    "..#......##.......###..##...#..",
    ".#..........#.#.......##.....#.",
    "....##.....##.#.#.##........##.",
    "..#.#..###..#..##...#.##...#...",
    ".......#.....#..#...#...#.....#",
    "##.#...#.#.#.##........#......#",
    "..###.....##..#....#.......##..",
    "#####..####...#.#..##.#...#..#.",
    "#...####....#........#....#....",
    ".#.#.#..#...##....#.......#.#..",
    "...#....##..##..#..#..#####.###",
    "...#......#.#..#......#...####.",
    ".##.....##.##.#.####.#..##...#.",
    "....#..#..##..##....#....#...##",
    "##.###........#...##....#.....#",
    "..#.#.#.......#....#..#....#...",
    "......##.....##....#...#.....#.",
    "#.#..#.#.......#....#.#.#......",
    ".....###..#...#.....#..##..#...",
    "......###.....#.#.#...#...##..#",
    ".#..#.#....##...#...#........#.",
    "#..###.#...####.#...#..........",
    ".#.##.#..#..##..#..###..##...#.",
    ".......#.#..........#.........#",
    "#......###..##..#....###.......",
    "..#............#.#........#...#",
    "..##.#.............#......#..##",
    ".#....#..#.#..#....###..#...#..",
    "....##....#..##...###....#....#",
    ".#....###.............#........",
    "#..#...#..#....#.##.#.....##...",
    "...........#.....#....#....#...",
    ".##.##.#...#....##......##..##.",
    "......#.#.##.#..##........#...#",
    "....##...##...#...#...#.#......",
    ".#...#....#...#......#.#...#..#",
    "........##.....#.#..#...##..##.",
    "##...#.....#.....####...#..#...",
    ".#.#..##.##......#...#.#...#...",
    "##...##.#......#....#.######.#.",
    "##.....####.###......#.##.#....",
    ".#.##....##........#...#..####.",
    ".......#..#....##...#.#...#..#.",
    "...##..........#..#........#..#",
    ".##.....#...#...#.##.###.......",
    ".##....#...#.#..#.....#...#....",
    "..#...#.....#.####.#.........#.",
    "#...#.##...#.#..#.#..#.###.#..#",
    ".##..#.#.##.........####....###",
    ".#..##........#..#.......#.....",
    "......#.#####.#.........#.#...#",
    "......#....#.#####...........#.",
    "..##....##..#.#..#....#......##",
    "#.#......#.##.#.##....#....#.#.",
    "..#..##.#...#.......##.........",
    ".....##.#...#..........#.......",
    "...#........#..#...#.....##.###",
    "....##.........#...#.#.....#...",
    ".......#.#....#...#.......#...#",
    ".#..#...##....#..#...........#.",
    ".#....##.##.#..#..####.#.#.....",
    ".##........#.....#..#......##..",
    ".#..##......#......#..##..#....",
    "###.....##.......#..##.#.......",
    ".....##......#.#...##...##.....",
    ".##....##..#..#####...#...#.##.",
    "##...##.#....##.#.#.#....##....",
    ".#.....#...#......#......##....",
    "##.#............#...#....#.....",
    "#..#.....#.....##.##.##..#..##.",
    "......#..............#..#...#.#",
    "....#.#....##......#..#...#....",
    ".#...#..#...#......#..##....#.#",
    ".....#......#..##...#.#....#...",
    "#...............#.##..#......#.",
    ".....#..##.#..#.#...###.....#..",
    "...#..#..#...#....#..#..##.#...",
    ".#...#...#..#......##...#......",
    "....###............#.#.#....#..",
    "#.#...#..#..#.#....#........#..",
    "....#.#.#..#..#....#..#...##.#.",
    ".#....#.#...#....#......#.#...#",
    "##..#.#.#..#.....#...###....#.#",
    ".##.....#.#...#..........#..#.#",
    "#....#......#....#.#.#...#.....",
    "#.#.....#.###.......#..#..#.#..",
    "#.....##..#.###...#...##...#.##",
    ".#.##....#.#.....##......###...",
    ".#.......##................#...",
    ".........#........####......#..",
    "...##.###..#.....#.#.....##.#..",
    "..#....#.#.#.##..........#.....",
    "#..##.....#.............##.....",
    ".##...#..#.......#.......#..#..",
    "...#.................#......##.",
    "....#....#.....#..###.#....###.",
    "..#.#..#...#..#.....###....#.#.",
    ".....###...#....#....#.#.##..##",
    "...#...#.........####........#.",
    ".......#..##.........#.........",
    ".#......##.....#.#####...##....",
    "....#.###...#.#....##..#......#",
    ".##..#....#.#....#..#.###.....#",
    "..#...#.#...#.##.....#.#....##.",
    "#.#.#.#.....##...#.#..##..#....",
    ".#............#.#.#..#...#...#.",
    "...##.#..#..####.#.###..##.....",
    ".##.....#.......#..##.#...##.#.",
    "#.#...#..#.##...##...####..#..#",
    "...##.......#.#.#.#.#.#...#..##",
    "...#.#.##..##..............###.",
    ".....#...#........#...#......#.",
    "..#..#..##....#..##.#.....#....",
    "#.....##........#.........##.#.",
    "###..#....#.##..##.............",
    ".#..#...#.#......#..#..##.....#",
    "...#.#.#............##........#",
    "..#.#....#..#....##....#...##.#",
    "...##...#...#..........##.#####",
    "....#..#.#.......##....#.#.###.",
    "##..#..#..#...###.#.....#......",
    "....###.#.#.#.##..##.#...#.....",
    ".....####..#.#..#.#......#.#.#.",
    "#.....#...#..#.#.........#..#..",
    ".##....#.#.####......##..#..##.",
    "......#.##.#.#..#..#....#.#....",
    ".#..#...#...#...#..#.....#.....",
    "..##.#..............#......#...",
    ".....###.##.......#.....#..#...",
    "..#.#..#..#.......#...##.##..#.",
    "##.###......#......#.#..#..##..",
    "..##.....#..#..#......#..#.....",
    "...##.......#.#..#.........#.#.",
    "......##.##.#.......#..#.#.....",
    "#......#........##..#.......#.#",
    "###....#...#...#.#...#..#..#...",
    "#..###....#....####..#...#.....",
    "....##..#.##.#....#..##...#.#..",
    "#.##..#....##..#...#..#.#.#..#.",
    "#.........#.....#...#.......#..",
    "...#.....#.#.....#........##...",
    "..#.##..#......#...#.....##.#..",
    "...###....#.....#...#..#.##..#.",
];
